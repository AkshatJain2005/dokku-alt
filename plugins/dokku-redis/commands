#!/bin/bash

source "$(dirname $0)/vars"

case "$1" in
  redis:create)
    redis_for_app "$2"
    verify_max_args 2 "$@"

    restart_database_container

    info "Redis database created: $DB_CONTAINER"

    redeploy_app "$APP"
    ;;

  redis:delete)
    redis_for_app "$2"
    verify_max_args 2 "$@"

    remove_container "$DB_CONTAINER"

    if [[ -d "$DB_VOLUME" ]]; then
        docker run --rm \
                --volume "$DB_VOLUME:$DB_CONTAINER_VOLUME"
                "$DB_IMAGE" \
                bash -c 'rm -rf /var/lib/redis'
    fi

    info "Redis database deleted: $DB_NAME"
    ;;

  redis:info)
    redis_for_app "$2"
    verify_max_args 2 "$@"

    [[ ! -d "$DB_VOLUME" ]] && fail "$DB_CONTAINER: database is not linked to $APP"

    docker run -i --rm \
                --link="$DB_CONTAINER":"$DB_CONTAINER_LINK" \
                "$DB_IMAGE" \
                bash - <<EOF
echo "       Host: \$REDIS_PORT_6379_TCP_ADDR"
echo "       Port: \$REDIS_PORT_6379_TCP_PORT"
echo
echo "       REDIS_URL=redis://\$REDIS_PORT_6379_TCP_ADDR:\$REDIS_PORT_6379_TCP_PORT"
EOF
    echo
    ;;

  help)
    cat && cat<<EOF
    redis:create <app>          Create a Redis database
    redis:delete <app>          Delete specified Redis database
    redis:info <app>            Display application information
EOF
    ;;

esac
